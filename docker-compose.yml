services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: docker/tracker_web/Dockerfile
    env_file:
      - .env
    volumes:
      - static_volume:/tracker/staticfiles/
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "8000:8000"

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./docker/tracker_nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/tracker/staticfiles/
    networks:
      - app-network

volumes:
  db_data:
  static_volume:

networks:
  app-network:
    driver: bridge